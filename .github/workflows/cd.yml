name: NPM publish CD workflow

on: [push]

jobs:
  build:
    # Run on latest version of ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # "ref" specifies the branch to check out.
          # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
          ref: ${{ github.event.release.target_commitish }}
      # install Node.js
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          # Specifies the registry, this field is required!
          registry-url: https://registry.npmjs.org/
      # clean install of your projects' deps. We use "npm ci" to avoid package lock changes
      - run: npm ci
      # set up git since we will later push to the repo
      - run: git config --global user.name "GitHub CD bot"
      - run: git config --global user.email "github-cd-bot@example.com"
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type,'pre') != true
        run: | 
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env: 
          RELEASE_TYPE: ${{github.event.inputs.release-type}}

        - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
        # Commit changes
      - name: Commit CHANGELOG.md and package.json changes and create tag
        run: |
          git add "package.json"
          git add "CHANGELOG.md"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}
      - name: Publish
        run: npm publish --verbose --access public --tag ${{ env.RELEASE_TAG }}
        env:
          # Use a token to publish to NPM. See below for how to set it up
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags
      # push the version changes to GitHub
      - run: git push
        env:
          # The secret is passed automatically. Nothing to configure.
          github-token: ${{ secrets.GITHUB_TOKEN }}
